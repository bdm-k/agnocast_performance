<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>[[kernel.kallsyms]] (144,161,426 samples, 0.97%)</title><rect x="1106.4" y="197" width="11.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1109.37" y="207.5" ></text>
</g>
<g >
<title>__futex_abstimed_wait_common (4,837,421 samples, 0.03%)</title><rect x="10.4" y="309" width="0.4" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="13.37" y="319.5" ></text>
</g>
<g >
<title>rclcpp::Executor::wait_for_work (144,434,228 samples, 0.97%)</title><rect x="267.2" y="373" width="11.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="270.24" y="383.5" ></text>
</g>
<g >
<title>___pthread_mutex_lock (28,108,701 samples, 0.19%)</title><rect x="968.2" y="341" width="2.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="971.20" y="351.5" ></text>
</g>
<g >
<title>ddsrt_recvmsg (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="341" width="0.2" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1192.80" y="351.5" ></text>
</g>
<g >
<title>[librclcpp.so] (104,544,087 samples, 0.70%)</title><rect x="96.6" y="293" width="8.3" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="99.56" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,837,421 samples, 0.03%)</title><rect x="10.4" y="165" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="175.5" ></text>
</g>
<g >
<title>__futex_abstimed_wait_common (17,899,355 samples, 0.12%)</title><rect x="253.5" y="197" width="1.5" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="256.53" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,899,355 samples, 0.12%)</title><rect x="253.5" y="85" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="256.53" y="95.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,846,771,236 samples, 12.45%)</title><rect x="817.8" y="261" width="146.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="820.80" y="271.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="405" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.80" y="415.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_subscription (11,819,174 samples, 0.08%)</title><rect x="272.1" y="341" width="0.9" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="275.07" y="351.5" ></text>
</g>
<g >
<title>main (2,174,712,448 samples, 14.66%)</title><rect x="88.1" y="389" width="172.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="91.06" y="399.5" >main</text>
</g>
<g >
<title>___pthread_mutex_lock (18,261,052 samples, 0.12%)</title><rect x="250.4" y="197" width="1.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="253.42" y="207.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_node_by_group (474,835,234 samples, 3.20%)</title><rect x="1136.2" y="373" width="37.8" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1139.22" y="383.5" >rcl..</text>
</g>
<g >
<title>__libc_start_call_main (2,174,712,448 samples, 14.66%)</title><rect x="88.1" y="405" width="172.9" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="91.06" y="415.5" >__libc_start_call_main</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (4,642,843 samples, 0.03%)</title><rect x="10.0" y="357" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (4,837,421 samples, 0.03%)</title><rect x="10.4" y="325" width="0.4" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="13.37" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.35" y="255.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (5,701,609 samples, 0.04%)</title><rect x="1189.4" y="421" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.35" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;agnocast::AnyObject, std::default_delete&lt;agnocast::AnyObject&gt; &gt;  (9,498,024 samples, 0.06%)</title><rect x="1186.2" y="357" width="0.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="1189.19" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21,949,075 samples, 0.15%)</title><rect x="1116.1" y="101" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1119.09" y="111.5" ></text>
</g>
<g >
<title>_int_free (22,015,818 samples, 0.15%)</title><rect x="65.5" y="437" width="1.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="68.53" y="447.5" ></text>
</g>
<g >
<title>free@plt (9,824,647 samples, 0.07%)</title><rect x="1188.6" y="341" width="0.8" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1191.57" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,352,717,639 samples, 9.12%)</title><rect x="1010.2" y="293" width="107.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1013.25" y="303.5" >[[kernel.kall..</text>
</g>
<g >
<title>agnocast::AgnocastExecutor::get_next_ready_agnocast_executable (27,226,610 samples, 0.18%)</title><rect x="546.5" y="373" width="2.1" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="549.46" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,837,421 samples, 0.03%)</title><rect x="10.4" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="271.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (9,734,242 samples, 0.07%)</title><rect x="541.9" y="293" width="0.8" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="544.90" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,837,421 samples, 0.03%)</title><rect x="10.4" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="287.5" ></text>
</g>
<g >
<title>__GI___ioctl (9,791,200 samples, 0.07%)</title><rect x="266.5" y="421" width="0.7" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="269.46" y="431.5" ></text>
</g>
<g >
<title>rcl_guard_condition_get_rmw_handle (479,909,117 samples, 3.23%)</title><rect x="279.5" y="437" width="38.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="282.51" y="447.5" >rcl..</text>
</g>
<g >
<title>lll_mutex_lock_optimized (28,108,701 samples, 0.19%)</title><rect x="968.2" y="325" width="2.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="971.20" y="335.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (21,092,608 samples, 0.14%)</title><rect x="977.4" y="341" width="1.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="980.42" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (42,113,374 samples, 0.28%)</title><rect x="1114.5" y="133" width="3.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1117.48" y="143.5" ></text>
</g>
<g >
<title>tcache_get (27,368,674 samples, 0.18%)</title><rect x="987.2" y="293" width="2.2" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="990.23" y="303.5" ></text>
</g>
<g >
<title>___pthread_mutex_unlock (18,554,337 samples, 0.13%)</title><rect x="104.9" y="293" width="1.5" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="107.88" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (992,488,590 samples, 6.69%)</title><rect x="1038.9" y="245" width="78.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1041.90" y="255.5" >[[kernel...</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (4,666,124 samples, 0.03%)</title><rect x="10.0" y="421" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,463,582,536 samples, 9.86%)</title><rect x="1001.4" y="341" width="116.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1004.43" y="351.5" >[[kernel.kalls..</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (4,837,421 samples, 0.03%)</title><rect x="10.4" y="389" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="13.37" y="399.5" ></text>
</g>
<g >
<title>lll_mutex_unlock_optimized (22,118,085 samples, 0.15%)</title><rect x="255.0" y="245" width="1.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="257.95" y="255.5" ></text>
</g>
<g >
<title>agnocast::decrement_rc (9,791,200 samples, 0.07%)</title><rect x="266.5" y="437" width="0.7" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="269.46" y="447.5" ></text>
</g>
<g >
<title>[unknown] (2,972,617,399 samples, 20.04%)</title><rect x="86.4" y="453" width="236.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="89.38" y="463.5" >[unknown]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (31,290,574 samples, 0.21%)</title><rect x="857.5" y="229" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="860.49" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,362,373,006 samples, 9.18%)</title><rect x="1009.5" y="325" width="108.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1012.48" y="335.5" >[[kernel.kall..</text>
</g>
<g >
<title>operator new (35,596,228 samples, 0.24%)</title><rect x="1120.3" y="325" width="2.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1123.27" y="335.5" ></text>
</g>
<g >
<title>bpf_prog_cffa201131d9012d_fv___x64_sys_ioctl_fentry_107 (11,293,052 samples, 0.08%)</title><rect x="531.8" y="245" width="0.9" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="534.83" y="255.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (4,666,124 samples, 0.03%)</title><rect x="10.0" y="389" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>start_thread (10,895,484,093 samples, 73.44%)</title><rect x="322.8" y="437" width="866.6" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="325.80" y="447.5" >start_thread</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (23,930,841 samples, 0.16%)</title><rect x="542.7" y="357" width="1.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="545.68" y="367.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (4,837,421 samples, 0.03%)</title><rect x="10.4" y="421" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="13.37" y="431.5" ></text>
</g>
<g >
<title>operator new (62,925,407 samples, 0.42%)</title><rect x="991.3" y="309" width="5.0" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="994.31" y="319.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_guard_condition (37,897,056 samples, 0.26%)</title><rect x="275.7" y="325" width="3.0" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="278.71" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (128,122,176 samples, 0.86%)</title><rect x="469.1" y="229" width="10.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="472.09" y="239.5" ></text>
</g>
<g >
<title>[[heap]] (814,038,305 samples, 5.49%)</title><rect x="10.8" y="453" width="64.7" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.76" y="463.5" >[[heap]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,899,355 samples, 0.12%)</title><rect x="253.5" y="101" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="256.53" y="111.5" ></text>
</g>
<g >
<title>dds_handle_unpin (20,789,329 samples, 0.14%)</title><rect x="251.9" y="261" width="1.6" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="254.88" y="271.5" ></text>
</g>
<g >
<title>__recvmsg_syscall (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="309" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1192.80" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,899,355 samples, 0.12%)</title><rect x="253.5" y="53" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="256.53" y="63.5" ></text>
</g>
<g >
<title>rclcpp::node_interfaces::NodeBase::for_each_callback_group (37,521,087 samples, 0.25%)</title><rect x="256.7" y="293" width="3.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="259.71" y="303.5" ></text>
</g>
<g >
<title>recv (5,701,609 samples, 0.04%)</title><rect x="1189.4" y="469" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1192.35" y="479.5" ></text>
</g>
<g >
<title>[librclcpp.so] (348,629,859 samples, 2.35%)</title><rect x="116.7" y="277" width="27.8" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="119.74" y="287.5" >[..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="213" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.80" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,049,332,437 samples, 7.07%)</title><rect x="449.3" y="277" width="83.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="452.28" y="287.5" >[[kernel...</text>
</g>
<g >
<title>[[kernel.kallsyms]] (321,816,853 samples, 2.17%)</title><rect x="894.5" y="213" width="25.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="897.48" y="223.5" >[..</text>
</g>
<g >
<title>listener (14,818,963,123 samples, 99.88%)</title><rect x="10.8" y="469" width="1178.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.76" y="479.5" >listener</text>
</g>
<g >
<title>__GI___pthread_disable_asynccancel (20,725,912 samples, 0.14%)</title><rect x="759.7" y="325" width="1.6" height="15.0" fill="rgb(236,146,34)" rx="2" ry="2" />
<text  x="762.66" y="335.5" ></text>
</g>
<g >
<title>bpf_trampoline_6442529372 (81,305,812 samples, 0.55%)</title><rect x="522.5" y="229" width="6.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="525.51" y="239.5" ></text>
</g>
<g >
<title>lll_mutex_unlock_optimized (33,401,454 samples, 0.23%)</title><rect x="764.7" y="325" width="2.7" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="767.69" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,837,421 samples, 0.03%)</title><rect x="10.4" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="223.5" ></text>
</g>
<g >
<title>lll_mutex_unlock_optimized (78,095,487 samples, 0.53%)</title><rect x="971.2" y="309" width="6.2" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="974.20" y="319.5" ></text>
</g>
<g >
<title>__clone3 (4,837,421 samples, 0.03%)</title><rect x="10.4" y="453" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.37" y="463.5" ></text>
</g>
<g >
<title>agnocast::MultiThreadedAgnocastExecutor::ros2_spin (2,174,712,448 samples, 14.66%)</title><rect x="88.1" y="357" width="172.9" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="91.06" y="367.5" >agnocast::MultiThreade..</text>
</g>
<g >
<title>tcache_put (20,371,230 samples, 0.14%)</title><rect x="342.1" y="357" width="1.6" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="345.07" y="367.5" ></text>
</g>
<g >
<title>get_topic_hash (10,122,273 samples, 0.07%)</title><rect x="521.7" y="181" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="524.71" y="191.5" ></text>
</g>
<g >
<title>rclcpp::CallbackGroup::collect_all_ptrs (1,015,316,035 samples, 6.84%)</title><rect x="107.8" y="293" width="80.7" height="15.0" fill="rgb(223,84,20)" rx="2" ry="2" />
<text  x="110.78" y="303.5" >rclcpp::C..</text>
</g>
<g >
<title>operator new (19,236,040 samples, 0.13%)</title><rect x="70.2" y="437" width="1.5" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="73.20" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (22,830,362 samples, 0.15%)</title><rect x="966.4" y="261" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="969.38" y="271.5" ></text>
</g>
<g >
<title>ddsrt_cond_waituntil (4,837,421 samples, 0.03%)</title><rect x="10.4" y="373" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.37" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (858,680,520 samples, 5.79%)</title><rect x="460.7" y="245" width="68.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="463.68" y="255.5" >[[kerne..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (66,203,700 samples, 0.45%)</title><rect x="1117.8" y="357" width="5.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1120.83" y="367.5" ></text>
</g>
<g >
<title>rcl_subscription_get_rmw_handle (19,731,028 samples, 0.13%)</title><rect x="71.7" y="437" width="1.6" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="74.73" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (64,419,619 samples, 0.43%)</title><rect x="317.7" y="437" width="5.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="320.68" y="447.5" ></text>
</g>
<g >
<title>start_thread (5,701,609 samples, 0.04%)</title><rect x="1189.4" y="437" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.35" y="447.5" ></text>
</g>
<g >
<title>__libc_start_main_impl (2,174,712,448 samples, 14.66%)</title><rect x="88.1" y="421" width="172.9" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="91.06" y="431.5" >__libc_start_main_impl</text>
</g>
<g >
<title>__libc_start_main (2,174,712,448 samples, 14.66%)</title><rect x="88.1" y="437" width="172.9" height="15.0" fill="rgb(236,142,34)" rx="2" ry="2" />
<text  x="91.06" y="447.5" >__libc_start_main</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (74,993,808 samples, 0.51%)</title><rect x="244.5" y="197" width="5.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="247.46" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="293" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.35" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.80" y="191.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_subscription (17,949,112 samples, 0.12%)</title><rect x="106.4" y="293" width="1.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="109.35" y="303.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="373" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.80" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (321,816,853 samples, 2.17%)</title><rect x="894.5" y="197" width="25.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="897.48" y="207.5" >[..</text>
</g>
<g >
<title>agnocast::MultiThreadedAgnocastExecutor::spin (144,434,228 samples, 0.97%)</title><rect x="267.2" y="421" width="11.5" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="270.24" y="431.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (9,791,200 samples, 0.07%)</title><rect x="266.5" y="405" width="0.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="269.46" y="415.5" ></text>
</g>
<g >
<title>__futex_abstimed_wait_common64 (4,837,421 samples, 0.03%)</title><rect x="10.4" y="293" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="13.37" y="303.5" ></text>
</g>
<g >
<title>rclcpp::QOSEventHandlerBase::add_to_wait_set (33,997,309 samples, 0.23%)</title><rect x="273.0" y="341" width="2.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="276.01" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (65,142,063 samples, 0.44%)</title><rect x="493.3" y="197" width="5.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="496.29" y="207.5" ></text>
</g>
<g >
<title>free (20,147,251 samples, 0.14%)</title><rect x="82.0" y="437" width="1.6" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="85.02" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,150,356,226 samples, 14.49%)</title><rect x="588.6" y="277" width="171.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="591.64" y="287.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>agnocast::AgnocastExecutor::receive_message (2,878,855,250 samples, 19.40%)</title><rect x="767.4" y="357" width="228.9" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="770.35" y="367.5" >agnocast::AgnocastExecutor::re..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (34,678,404 samples, 0.23%)</title><rect x="83.6" y="437" width="2.8" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="86.62" y="447.5" ></text>
</g>
<g >
<title>_int_free (22,622,928 samples, 0.15%)</title><rect x="264.7" y="437" width="1.8" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="267.66" y="447.5" ></text>
</g>
<g >
<title>agnocast::AgnocastExecutor::get_next_agnocast_executable (7,312,081,269 samples, 49.28%)</title><rect x="544.6" y="389" width="581.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="547.58" y="399.5" >agnocast::AgnocastExecutor::get_next_agnocast_executable</text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,637,016,916 samples, 11.03%)</title><rect x="629.5" y="229" width="130.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="632.46" y="239.5" >[[kernel.kallsym..</text>
</g>
<g >
<title>__libc_recvmsg (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="325" width="0.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1192.80" y="335.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (4,837,421 samples, 0.03%)</title><rect x="10.4" y="405" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="13.37" y="415.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.35" y="239.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (17,899,355 samples, 0.12%)</title><rect x="253.5" y="229" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="256.53" y="239.5" ></text>
</g>
<g >
<title>[[stack]] (41,502,699 samples, 0.28%)</title><rect x="78.0" y="453" width="3.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="80.97" y="463.5" ></text>
</g>
<g >
<title>agnocast::AgnocastExecutor::get_next_agnocast_executable (24,651,143 samples, 0.17%)</title><rect x="67.3" y="437" width="1.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="70.29" y="447.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (4,666,124 samples, 0.03%)</title><rect x="10.0" y="405" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>[[bluetooth]] (924,578,904 samples, 6.23%)</title><rect x="459.2" y="261" width="73.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="462.20" y="271.5" >[[blueto..</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (21,114,309 samples, 0.14%)</title><rect x="86.4" y="437" width="1.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="89.38" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (360,962,726 samples, 2.43%)</title><rect x="1089.1" y="213" width="28.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1092.13" y="223.5" >[[..</text>
</g>
<g >
<title>__futex_abstimed_wait_common64 (17,899,355 samples, 0.12%)</title><rect x="253.5" y="181" width="1.5" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="256.53" y="191.5" ></text>
</g>
<g >
<title>___pthread_mutex_unlock (33,401,454 samples, 0.23%)</title><rect x="764.7" y="357" width="2.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="767.69" y="367.5" ></text>
</g>
<g >
<title>[librclcpp.so] (1,263,243,847 samples, 8.51%)</title><rect x="88.1" y="309" width="100.4" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="91.06" y="319.5" >[librclcpp.so]</text>
</g>
<g >
<title>___pthread_mutex_unlock (87,814,216 samples, 0.59%)</title><rect x="970.4" y="341" width="7.0" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="973.43" y="351.5" ></text>
</g>
<g >
<title>agnocast::MultiThreadedAgnocastExecutor::spin (2,174,712,448 samples, 14.66%)</title><rect x="88.1" y="373" width="172.9" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="91.06" y="383.5" >agnocast::MultiThreade..</text>
</g>
<g >
<title>__recvmsg_syscall (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="309" width="0.4" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1192.35" y="319.5" ></text>
</g>
<g >
<title>agnocast::AgnocastExecutor::wait_and_handle_epoll_event (7,261,227,146 samples, 48.94%)</title><rect x="548.6" y="373" width="577.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="551.63" y="383.5" >agnocast::AgnocastExecutor::wait_and_handle_epoll_event</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="293" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.80" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,837,421 samples, 0.03%)</title><rect x="10.4" y="229" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="239.5" ></text>
</g>
<g >
<title>memcpy@plt (16,050,114 samples, 0.11%)</title><rect x="981.6" y="341" width="1.3" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="984.62" y="351.5" ></text>
</g>
<g >
<title>[librclcpp.so] (50,654,715 samples, 0.34%)</title><rect x="1174.9" y="373" width="4.0" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="1177.86" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_free (20,370,842 samples, 0.14%)</title><rect x="1186.9" y="341" width="1.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1189.95" y="351.5" ></text>
</g>
<g >
<title>___mq_timedreceive_time64 (2,475,605,856 samples, 16.69%)</title><rect x="564.4" y="357" width="196.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="567.42" y="367.5" >___mq_timedreceive_time64</text>
</g>
<g >
<title>[[kernel.kallsyms]] (219,941,929 samples, 1.48%)</title><rect x="481.0" y="213" width="17.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="483.98" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,899,355 samples, 0.12%)</title><rect x="253.5" y="165" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="256.53" y="175.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21,206,595 samples, 0.14%)</title><rect x="514.4" y="197" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="517.45" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,367,982 samples, 0.14%)</title><rect x="527.4" y="197" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="530.36" y="207.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_service (60,720,689 samples, 0.41%)</title><rect x="267.2" y="341" width="4.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="270.24" y="351.5" ></text>
</g>
<g >
<title>[anon] (64,268,582 samples, 0.43%)</title><rect x="81.3" y="453" width="5.1" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="84.27" y="463.5" ></text>
</g>
<g >
<title>free (9,636,775 samples, 0.06%)</title><rect x="986.5" y="325" width="0.7" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="989.47" y="335.5" ></text>
</g>
<g >
<title>rcl_guard_condition_get_rmw_handle (19,864,953 samples, 0.13%)</title><rect x="277.1" y="309" width="1.6" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="280.15" y="319.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (974,718,766 samples, 6.57%)</title><rect x="682.1" y="181" width="77.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="685.14" y="191.5" >[[kernel..</text>
</g>
<g >
<title>[librclcpp.so] (144,434,228 samples, 0.97%)</title><rect x="267.2" y="357" width="11.5" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="270.24" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock_usercnt (33,401,454 samples, 0.23%)</title><rect x="764.7" y="341" width="2.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="767.69" y="351.5" ></text>
</g>
<g >
<title>___pthread_mutex_lock (10,155,654 samples, 0.07%)</title><rect x="546.5" y="357" width="0.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="549.46" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.80" y="239.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,116,300,019 samples, 7.52%)</title><rect x="444.0" y="293" width="88.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="446.95" y="303.5" >[[kernel.k..</text>
</g>
<g >
<title>rcl_wait (857,281,597 samples, 5.78%)</title><rect x="188.5" y="309" width="68.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="191.53" y="319.5" >rcl_wait</text>
</g>
<g >
<title>epoll_wait (1,527,918,096 samples, 10.30%)</title><rect x="996.3" y="357" width="121.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="999.31" y="367.5" >epoll_wait</text>
</g>
<g >
<title>lll_mutex_lock_optimized (9,913,437 samples, 0.07%)</title><rect x="763.9" y="341" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="766.91" y="351.5" ></text>
</g>
<g >
<title>bpf_trampoline_6442551885 (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="165" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.35" y="175.5" ></text>
</g>
<g >
<title>operator new (9,734,242 samples, 0.07%)</title><rect x="541.9" y="341" width="0.8" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="544.90" y="351.5" ></text>
</g>
<g >
<title>___pthread_cond_timedwait64 (17,899,355 samples, 0.12%)</title><rect x="253.5" y="245" width="1.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="256.53" y="255.5" ></text>
</g>
<g >
<title>agnocast_ioctl (1,261,553,197 samples, 8.50%)</title><rect x="860.0" y="245" width="100.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="862.98" y="255.5" >agnocast_ioctl</text>
</g>
<g >
<title>decrement_message_entry_rc (302,242,523 samples, 2.04%)</title><rect x="498.5" y="213" width="24.0" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="501.47" y="223.5" >d..</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (813,579,206 samples, 5.48%)</title><rect x="190.2" y="277" width="64.8" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="193.25" y="287.5" >[libdds..</text>
</g>
<g >
<title>rmw_wait (857,281,597 samples, 5.78%)</title><rect x="188.5" y="293" width="68.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="191.53" y="303.5" >rmw_wait</text>
</g>
<g >
<title>get_topic_hash (10,421,788 samples, 0.07%)</title><rect x="959.5" y="213" width="0.8" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="962.48" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,899,355 samples, 0.12%)</title><rect x="253.5" y="37" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="256.53" y="47.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (10,122,273 samples, 0.07%)</title><rect x="521.7" y="165" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="524.71" y="175.5" ></text>
</g>
<g >
<title>rcl_service_is_valid (42,076,384 samples, 0.28%)</title><rect x="268.7" y="309" width="3.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="271.72" y="319.5" ></text>
</g>
<g >
<title>rclcpp::Executor::wait_for_work (2,174,712,448 samples, 14.66%)</title><rect x="88.1" y="325" width="172.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="91.06" y="335.5" >rclcpp::Executor::wait..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (168,677,479 samples, 1.14%)</title><rect x="982.9" y="341" width="13.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="985.90" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,249,817,934 samples, 15.16%)</title><rect x="789.3" y="325" width="178.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="792.26" y="335.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>___pthread_cond_timedwait64 (4,837,421 samples, 0.03%)</title><rect x="10.4" y="357" width="0.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="13.37" y="367.5" ></text>
</g>
<g >
<title>[librclcpp.so] (34,727,269 samples, 0.23%)</title><rect x="62.8" y="437" width="2.7" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="65.77" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,837,421 samples, 0.03%)</title><rect x="10.4" y="245" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="255.5" ></text>
</g>
<g >
<title>find_topic (46,271,857 samples, 0.31%)</title><rect x="955.8" y="213" width="3.7" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="958.80" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (27,660,736 samples, 0.19%)</title><rect x="73.3" y="437" width="2.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="76.30" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (403,525,368 samples, 2.72%)</title><rect x="827.9" y="245" width="32.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="830.88" y="255.5" >[[..</text>
</g>
<g >
<title>__GI___futex_abstimed_wait_cancelable64 (17,899,355 samples, 0.12%)</title><rect x="253.5" y="213" width="1.5" height="15.0" fill="rgb(215,48,11)" rx="2" ry="2" />
<text  x="256.53" y="223.5" ></text>
</g>
<g >
<title>__pthread_cond_wait_common (4,837,421 samples, 0.03%)</title><rect x="10.4" y="341" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.37" y="351.5" ></text>
</g>
<g >
<title>rcl_event_get_rmw_handle (25,818,577 samples, 0.17%)</title><rect x="273.7" y="309" width="2.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="276.66" y="319.5" ></text>
</g>
<g >
<title>agnocast_ioctl (543,617,070 samples, 3.66%)</title><rect x="479.3" y="229" width="43.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="482.28" y="239.5" >agno..</text>
</g>
<g >
<title>start_thread (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="437" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1192.80" y="447.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="389" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.80" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,362,373,006 samples, 9.18%)</title><rect x="1009.5" y="309" width="108.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1012.48" y="319.5" >[[kernel.kall..</text>
</g>
<g >
<title>tcache_put (23,870,744 samples, 0.16%)</title><rect x="989.4" y="277" width="1.9" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="992.41" y="287.5" ></text>
</g>
<g >
<title>__GI___ioctl (2,323,941,763 samples, 15.66%)</title><rect x="783.4" y="341" width="184.8" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="786.37" y="351.5" >__GI___ioctl</text>
</g>
<g >
<title>operator new (27,368,674 samples, 0.18%)</title><rect x="987.2" y="325" width="2.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="990.23" y="335.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="357" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.35" y="367.5" ></text>
</g>
<g >
<title>agnocast::MultiThreadedAgnocastExecutor::agnocast_spin (41,502,699 samples, 0.28%)</title><rect x="78.0" y="437" width="3.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="80.97" y="447.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_executable (2,174,712,448 samples, 14.66%)</title><rect x="88.1" y="341" width="172.9" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="91.06" y="351.5" >rclcpp::Executor::get_..</text>
</g>
<g >
<title>agnocast::AgnocastExecutor::get_next_ready_agnocast_executable (601,634,464 samples, 4.06%)</title><rect x="1126.1" y="389" width="47.9" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1129.13" y="399.5" >agno..</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (4,642,843 samples, 0.03%)</title><rect x="10.0" y="373" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>rclcpp::Context::is_valid (50,654,715 samples, 0.34%)</title><rect x="1174.9" y="389" width="4.0" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1177.86" y="399.5" ></text>
</g>
<g >
<title>rclcpp::SubscriptionBase::get_subscription_handle (19,154,163 samples, 0.13%)</title><rect x="187.0" y="261" width="1.5" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="190.01" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.35" y="191.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,899,355 samples, 0.12%)</title><rect x="253.5" y="149" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="256.53" y="159.5" ></text>
</g>
<g >
<title>rcl_wait_set_add_event (33,997,309 samples, 0.23%)</title><rect x="273.0" y="325" width="2.7" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="276.01" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="197" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.80" y="207.5" ></text>
</g>
<g >
<title>rclcpp::detail::add_guard_condition_to_rcl_wait_set (37,897,056 samples, 0.26%)</title><rect x="275.7" y="341" width="3.0" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="278.71" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (65,142,063 samples, 0.44%)</title><rect x="493.3" y="181" width="5.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="496.29" y="191.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::function&lt;void  (131,514,872 samples, 0.89%)</title><rect x="1178.9" y="389" width="10.5" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1181.89" y="399.5" ></text>
</g>
<g >
<title>agnocast_get_borrowed_publisher_num (19,778,480 samples, 0.13%)</title><rect x="1118.7" y="309" width="1.6" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1121.69" y="319.5" ></text>
</g>
<g >
<title>ddsrt_mutex_lock (18,261,052 samples, 0.12%)</title><rect x="250.4" y="213" width="1.5" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="253.42" y="223.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock_usercnt (17,070,956 samples, 0.12%)</title><rect x="547.3" y="341" width="1.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="550.27" y="351.5" ></text>
</g>
<g >
<title>rclcpp::Executor::add_callback_groups_from_nodes_associated_to_executor (37,521,087 samples, 0.25%)</title><rect x="256.7" y="309" width="3.0" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="259.71" y="319.5" ></text>
</g>
<g >
<title>__clone3 (10,895,484,093 samples, 73.44%)</title><rect x="322.8" y="453" width="866.6" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="325.80" y="463.5" >__clone3</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,423,511,044 samples, 16.33%)</title><rect x="566.9" y="325" width="192.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="569.91" y="335.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (105,625,502 samples, 0.71%)</title><rect x="242.0" y="213" width="8.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="245.02" y="223.5" ></text>
</g>
<g >
<title>all (14,836,631,006 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>dq.builtins (4,666,124 samples, 0.03%)</title><rect x="10.0" y="469" width="0.4" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,447,512 samples, 0.02%)</title><rect x="1189.8" y="117" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.81" y="127.5" ></text>
</g>
<g >
<title>find_topic (80,205,115 samples, 0.54%)</title><rect x="516.1" y="197" width="6.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="519.13" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="213" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.35" y="223.5" ></text>
</g>
<g >
<title>free (11,073,907 samples, 0.07%)</title><rect x="1174.0" y="389" width="0.9" height="15.0" fill="rgb(213,38,9)" rx="2" ry="2" />
<text  x="1176.98" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (61,042,140 samples, 0.41%)</title><rect x="524.1" y="213" width="4.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="527.12" y="223.5" ></text>
</g>
<g >
<title>agnocast::get_erased_callback&lt;agnocast_sample_interfaces::msg::Int64_&lt;std::allocator&lt;void&gt; &gt;, std::function&lt;void  (25,357,669 samples, 0.17%)</title><rect x="532.7" y="357" width="2.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="535.73" y="367.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock_usercnt (18,554,337 samples, 0.13%)</title><rect x="104.9" y="277" width="1.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="107.88" y="287.5" ></text>
</g>
<g >
<title>agnocast::MultiThreadedAgnocastExecutor::ros2_spin (144,434,228 samples, 0.97%)</title><rect x="267.2" y="405" width="11.5" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="270.24" y="415.5" ></text>
</g>
<g >
<title>start_thread (4,837,421 samples, 0.03%)</title><rect x="10.4" y="437" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.37" y="447.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock_usercnt (87,814,216 samples, 0.59%)</title><rect x="970.4" y="325" width="7.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="973.43" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21,949,075 samples, 0.15%)</title><rect x="1116.1" y="117" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1119.09" y="127.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (35,644,026 samples, 0.24%)</title><rect x="1120.3" y="341" width="2.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1123.26" y="351.5" ></text>
</g>
<g >
<title>arena_for_chunk (20,370,842 samples, 0.14%)</title><rect x="1186.9" y="325" width="1.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="1189.95" y="335.5" ></text>
</g>
<g >
<title>agnocast_get_borrowed_publisher_num (9,734,242 samples, 0.07%)</title><rect x="541.9" y="309" width="0.8" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="544.90" y="319.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (27,368,674 samples, 0.18%)</title><rect x="987.2" y="309" width="2.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="990.23" y="319.5" ></text>
</g>
<g >
<title>main (144,434,228 samples, 0.97%)</title><rect x="267.2" y="437" width="11.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="270.24" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (44,189,903 samples, 0.30%)</title><rect x="964.7" y="277" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="967.68" y="287.5" ></text>
</g>
<g >
<title>[[bluetooth]] (1,880,824,178 samples, 12.68%)</title><rect x="815.1" y="277" width="149.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="818.09" y="287.5" >[[bluetooth]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,899,355 samples, 0.12%)</title><rect x="253.5" y="133" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="256.53" y="143.5" ></text>
</g>
<g >
<title>MinimalSubscriber::callback (24,391,827 samples, 0.16%)</title><rect x="386.2" y="357" width="1.9" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="389.21" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,962,366,644 samples, 13.23%)</title><rect x="603.6" y="245" width="156.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="606.59" y="255.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>bpf_prog_0ea72e6569c04208_net_inet_recvmsg_fexit_695 (2,447,512 samples, 0.02%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="1192.81" y="159.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,899,355 samples, 0.12%)</title><rect x="253.5" y="69" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="256.53" y="79.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (11,901,958 samples, 0.08%)</title><rect x="541.0" y="341" width="0.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="543.96" y="351.5" ></text>
</g>
<g >
<title>malloc (19,778,480 samples, 0.13%)</title><rect x="1118.7" y="325" width="1.6" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1121.69" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_free (20,371,230 samples, 0.14%)</title><rect x="342.1" y="389" width="1.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="345.07" y="399.5" ></text>
</g>
<g >
<title>__memcpy_avx_unaligned_erms (35,977,204 samples, 0.24%)</title><rect x="261.0" y="437" width="2.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="264.02" y="447.5" ></text>
</g>
<g >
<title>malloc (9,734,242 samples, 0.07%)</title><rect x="541.9" y="325" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="544.90" y="335.5" ></text>
</g>
<g >
<title>lll_mutex_lock_optimized (18,261,052 samples, 0.12%)</title><rect x="250.4" y="181" width="1.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="253.42" y="191.5" ></text>
</g>
<g >
<title>gc (4,837,421 samples, 0.03%)</title><rect x="10.4" y="469" width="0.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="13.37" y="479.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.35" y="207.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,168,088,284 samples, 7.87%)</title><rect x="1024.9" y="261" width="92.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1027.93" y="271.5" >[[kernel.ka..</text>
</g>
<g >
<title>bpf_trampoline_6442551885 (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.80" y="175.5" ></text>
</g>
<g >
<title>__clone3 (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="453" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1192.80" y="463.5" ></text>
</g>
<g >
<title>___pthread_mutex_unlock (22,118,085 samples, 0.15%)</title><rect x="255.0" y="277" width="1.7" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="257.95" y="287.5" ></text>
</g>
<g >
<title>receive_msg (505,853,349 samples, 3.41%)</title><rect x="920.1" y="229" width="40.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="923.08" y="239.5" >rec..</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (5,701,609 samples, 0.04%)</title><rect x="1189.4" y="405" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.35" y="415.5" ></text>
</g>
<g >
<title>pthread_mutex_lock@plt (11,358,873 samples, 0.08%)</title><rect x="1135.3" y="373" width="0.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1138.31" y="383.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (612,294,851 samples, 4.13%)</title><rect x="1069.1" y="229" width="48.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1072.14" y="239.5" >[[ke..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,088,650,631 samples, 14.08%)</title><rect x="593.5" y="261" width="166.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="596.54" y="271.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (650,828,332 samples, 4.39%)</title><rect x="707.9" y="165" width="51.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="710.90" y="175.5" >[[ker..</text>
</g>
<g >
<title>__GI___libc_free (23,870,744 samples, 0.16%)</title><rect x="989.4" y="309" width="1.9" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="992.41" y="319.5" ></text>
</g>
<g >
<title>start_thread (4,666,124 samples, 0.03%)</title><rect x="10.0" y="437" width="0.4" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>rclcpp::Executor::get_next_executable (144,434,228 samples, 0.97%)</title><rect x="267.2" y="389" width="11.5" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="270.24" y="399.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="277" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.80" y="287.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,837,421 samples, 0.03%)</title><rect x="10.4" y="181" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="191.5" ></text>
</g>
<g >
<title>___pthread_mutex_lock (42,566,132 samples, 0.29%)</title><rect x="761.3" y="357" width="3.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="764.31" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (21,928,333 samples, 0.15%)</title><rect x="520.0" y="181" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="522.96" y="191.5" ></text>
</g>
<g >
<title>ioctl@plt (31,799,381 samples, 0.21%)</title><rect x="979.1" y="341" width="2.5" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="982.09" y="351.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (654,032,313 samples, 4.41%)</title><rect x="10.8" y="437" width="52.0" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="13.76" y="447.5" >[libd..</text>
</g>
<g >
<title>malloc (11,798,966 samples, 0.08%)</title><rect x="995.4" y="293" width="0.9" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="998.38" y="303.5" ></text>
</g>
<g >
<title>___mq_timedreceive_time64 (2,475,605,856 samples, 16.69%)</title><rect x="564.4" y="341" width="196.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="567.42" y="351.5" >___mq_timedreceive_time64</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="357" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.80" y="367.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,303,313,461 samples, 8.78%)</title><rect x="656.0" y="213" width="103.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="659.00" y="223.5" >[[kernel.kal..</text>
</g>
<g >
<title>agnocast::AgnocastExecutor::get_next_agnocast_executable (9,442,927 samples, 0.06%)</title><rect x="81.3" y="437" width="0.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="84.27" y="447.5" ></text>
</g>
<g >
<title>___pthread_mutex_unlock (17,070,956 samples, 0.12%)</title><rect x="547.3" y="357" width="1.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="550.27" y="367.5" ></text>
</g>
<g >
<title>agnocast::AgnocastExecutor::execute_agnocast_executable (2,525,880,628 samples, 17.02%)</title><rect x="343.7" y="389" width="200.9" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="346.69" y="399.5" >agnocast::AgnocastExecutor..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (31,052,045 samples, 0.21%)</title><rect x="75.5" y="453" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="78.50" y="463.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.30] (10,895,484,093 samples, 73.44%)</title><rect x="322.8" y="421" width="866.6" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="325.80" y="431.5" >[libstdc++.so.6.0.30]</text>
</g>
<g >
<title>__clone3 (5,701,609 samples, 0.04%)</title><rect x="1189.4" y="453" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="1192.35" y="463.5" ></text>
</g>
<g >
<title>_int_free (23,870,744 samples, 0.16%)</title><rect x="989.4" y="293" width="1.9" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="992.41" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (86,796,151 samples, 0.59%)</title><rect x="989.4" y="325" width="6.9" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="992.41" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (17,899,355 samples, 0.12%)</title><rect x="253.5" y="117" width="1.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="256.53" y="127.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (85,613,190 samples, 0.58%)</title><rect x="1111.0" y="181" width="6.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1114.03" y="191.5" ></text>
</g>
<g >
<title>rclcpp::ServiceBase::get_service_handle (465,901,938 samples, 3.14%)</title><rect x="150.0" y="261" width="37.0" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="152.95" y="271.5" >rcl..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="261" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.35" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (74,801,904 samples, 0.50%)</title><rect x="1111.9" y="149" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1114.89" y="159.5" ></text>
</g>
<g >
<title>ros_trace_rclcpp_executor_wait_for_work@plt (16,623,290 samples, 0.11%)</title><rect x="259.7" y="309" width="1.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="262.70" y="319.5" ></text>
</g>
<g >
<title>__tls_get_addr (19,778,480 samples, 0.13%)</title><rect x="1118.7" y="293" width="1.6" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="1121.69" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,447,512 samples, 0.02%)</title><rect x="1189.8" y="133" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.81" y="143.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,092,964,131 samples, 14.11%)</title><rect x="801.7" y="309" width="166.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="804.74" y="319.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (13,289,212 samples, 0.09%)</title><rect x="954.7" y="213" width="1.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="957.74" y="223.5" ></text>
</g>
<g >
<title>recvUC (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="469" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1192.80" y="479.5" ></text>
</g>
<g >
<title>__tls_get_addr (9,792,063 samples, 0.07%)</title><rect x="263.9" y="437" width="0.8" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="266.88" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,311,888,934 samples, 8.84%)</title><rect x="1013.5" y="277" width="104.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1016.50" y="287.5" >[[kernel.kal..</text>
</g>
<g >
<title>_int_free (20,371,230 samples, 0.14%)</title><rect x="342.1" y="373" width="1.6" height="15.0" fill="rgb(247,196,46)" rx="2" ry="2" />
<text  x="345.07" y="383.5" ></text>
</g>
<g >
<title>lll_mutex_unlock_optimized (18,554,337 samples, 0.13%)</title><rect x="104.9" y="261" width="1.5" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="107.88" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (45,614,872 samples, 0.31%)</title><rect x="961.1" y="229" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="964.05" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;agnocast::AnyObject, std::default_delete&lt;agnocast::AnyObject&gt; &gt;  (99,673,882 samples, 0.67%)</title><rect x="534.8" y="357" width="7.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="537.75" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2,479,354,586 samples, 16.71%)</title><rect x="347.4" y="373" width="197.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="350.39" y="383.5" >std::_Function_handler&lt;vo..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,182,033,850 samples, 14.71%)</title><rect x="586.1" y="309" width="173.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="589.12" y="319.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>__clone3 (4,666,124 samples, 0.03%)</title><rect x="10.0" y="453" width="0.4" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock_usercnt (22,118,085 samples, 0.15%)</title><rect x="255.0" y="261" width="1.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="257.95" y="271.5" ></text>
</g>
<g >
<title>operator new (19,778,480 samples, 0.13%)</title><rect x="1118.7" y="341" width="1.6" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1121.69" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,165,629,358 samples, 7.86%)</title><rect x="667.0" y="197" width="92.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="669.95" y="207.5" >[[kernel.ka..</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="245" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.80" y="255.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (30,195,489 samples, 0.20%)</title><rect x="1186.9" y="357" width="2.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1189.95" y="367.5" ></text>
</g>
<g >
<title>agnocast::TypedMessagePtr&lt;agnocast_sample_interfaces::msg::Int64_&lt;std::allocator&lt;void&gt; &gt; &gt;::~TypedMessagePtr (1,817,940,798 samples, 12.25%)</title><rect x="388.1" y="357" width="144.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="391.15" y="367.5" >agnocast::TypedMes..</text>
</g>
<g >
<title>dds_entity_pin_with_origin (123,886,554 samples, 0.84%)</title><rect x="242.0" y="245" width="9.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="245.02" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (44,831,124 samples, 0.30%)</title><rect x="494.9" y="165" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="497.91" y="175.5" ></text>
</g>
<g >
<title>ddsrt_cond_waituntil (17,899,355 samples, 0.12%)</title><rect x="253.5" y="261" width="1.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="256.53" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (1,182,726,082 samples, 7.97%)</title><rect x="438.7" y="309" width="94.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="441.67" y="319.5" >[[kernel.ka..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_assign (38,123,272 samples, 0.26%)</title><rect x="1123.1" y="357" width="3.0" height="15.0" fill="rgb(238,153,36)" rx="2" ry="2" />
<text  x="1126.10" y="367.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (30,696,843 samples, 0.21%)</title><rect x="992.9" y="293" width="2.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="995.93" y="303.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (20,446,694 samples, 0.14%)</title><rect x="477.6" y="213" width="1.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="480.65" y="223.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (4,837,421 samples, 0.03%)</title><rect x="10.4" y="197" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.37" y="207.5" ></text>
</g>
<g >
<title>dds_entity_lock (123,886,554 samples, 0.84%)</title><rect x="242.0" y="261" width="9.9" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="245.02" y="271.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="421" width="0.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.80" y="431.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (24,867,836 samples, 0.17%)</title><rect x="1121.1" y="309" width="2.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1124.12" y="319.5" ></text>
</g>
<g >
<title>__GI___ioctl (1,261,020,469 samples, 8.50%)</title><rect x="432.4" y="325" width="100.3" height="15.0" fill="rgb(232,128,30)" rx="2" ry="2" />
<text  x="435.44" y="335.5" >__GI___ioctl</text>
</g>
<g >
<title>___pthread_mutex_lock (28,162,933 samples, 0.19%)</title><rect x="144.5" y="277" width="2.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="147.47" y="287.5" ></text>
</g>
<g >
<title>agnocast::decrement_rc (1,805,900,216 samples, 12.17%)</title><rect x="389.1" y="341" width="143.6" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="392.10" y="351.5" >agnocast::decremen..</text>
</g>
<g >
<title>bpf_trampoline_6442529372 (54,964,595 samples, 0.37%)</title><rect x="960.3" y="245" width="4.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="963.31" y="255.5" ></text>
</g>
<g >
<title>lll_mutex_lock_optimized (28,162,933 samples, 0.19%)</title><rect x="144.5" y="261" width="2.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="147.47" y="271.5" ></text>
</g>
<g >
<title>ddsrt_recvmsg (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="341" width="0.4" height="15.0" fill="rgb(226,97,23)" rx="2" ry="2" />
<text  x="1192.35" y="351.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="373" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.35" y="383.5" ></text>
</g>
<g >
<title>bpf_prog_b46e63a1ec25f053_fv___x64_sys_ioctl_fexit_418 (35,891,765 samples, 0.24%)</title><rect x="529.0" y="245" width="2.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="531.98" y="255.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (74,801,904 samples, 0.50%)</title><rect x="1111.9" y="165" width="5.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1114.89" y="175.5" ></text>
</g>
<g >
<title>rcl_event_is_valid (25,818,577 samples, 0.17%)</title><rect x="273.7" y="293" width="2.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="276.66" y="303.5" ></text>
</g>
<g >
<title>checked_request2size (10,124,135 samples, 0.07%)</title><rect x="994.6" y="277" width="0.8" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="997.57" y="287.5" ></text>
</g>
<g >
<title>[libddsc.so.0.10.5] (5,701,609 samples, 0.04%)</title><rect x="1189.4" y="389" width="0.4" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1192.35" y="399.5" ></text>
</g>
<g >
<title>malloc (9,844,283 samples, 0.07%)</title><rect x="278.7" y="437" width="0.8" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="281.73" y="447.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (131,514,872 samples, 0.89%)</title><rect x="1178.9" y="373" width="10.5" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1181.89" y="383.5" ></text>
</g>
<g >
<title>agnocast::MultiThreadedAgnocastExecutor::agnocast_spin (10,895,484,093 samples, 73.44%)</title><rect x="322.8" y="405" width="866.6" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="325.80" y="415.5" >agnocast::MultiThreadedAgnocastExecutor::agnocast_spin</text>
</g>
<g >
<title>[libddsc.so.0.10.5] (123,886,554 samples, 0.84%)</title><rect x="242.0" y="229" width="9.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="245.02" y="239.5" ></text>
</g>
<g >
<title>ddsi_plist_init_frommsg (4,642,843 samples, 0.03%)</title><rect x="10.0" y="341" width="0.4" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="149" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.35" y="159.5" ></text>
</g>
<g >
<title>rcl_service_get_rmw_handle (42,076,384 samples, 0.28%)</title><rect x="268.7" y="325" width="3.4" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="271.72" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (679,686,099 samples, 4.58%)</title><rect x="866.0" y="229" width="54.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="869.02" y="239.5" >[[ker..</text>
</g>
<g >
<title>lll_mutex_unlock_optimized (17,070,956 samples, 0.12%)</title><rect x="547.3" y="325" width="1.3" height="15.0" fill="rgb(243,177,42)" rx="2" ry="2" />
<text  x="550.27" y="335.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (525,837,997 samples, 3.54%)</title><rect x="146.7" y="277" width="41.8" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="149.71" y="287.5" >std..</text>
</g>
<g >
<title>__libc_recvmsg (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="325" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1192.35" y="335.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (5,676,583 samples, 0.04%)</title><rect x="1189.4" y="277" width="0.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.35" y="287.5" ></text>
</g>
<g >
<title>agnocast::AgnocastExecutor::wait_and_handle_epoll_event (11,983,958 samples, 0.08%)</title><rect x="69.2" y="437" width="1.0" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="72.25" y="447.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,462,729 samples, 0.02%)</title><rect x="1189.8" y="261" width="0.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1192.80" y="271.5" ></text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,014,449,116 samples, 13.58%)</title><rect x="808.0" y="293" width="160.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="810.98" y="303.5" >[[kernel.kallsyms]]</text>
</g>
<g >
<title>[[kernel.kallsyms]] (2,150,356,226 samples, 14.49%)</title><rect x="588.6" y="293" width="171.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="591.64" y="303.5" >[[kernel.kallsyms]]</text>
</g>
</g>
</svg>
